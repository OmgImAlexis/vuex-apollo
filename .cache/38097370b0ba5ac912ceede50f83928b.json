{"dependencies":[{"name":"/Users/Other/Desktop/dev/vuex-apollo/package.json","includedInParent":true,"mtime":1530911331668},{"name":"/Users/Other/Desktop/dev/vuex-apollo/tests/demo/.babelrc","includedInParent":true,"mtime":1530910940711},{"name":"./types","loc":{"line":1,"column":23},"parent":"/Users/Other/Desktop/dev/vuex-apollo/tests/demo/app/modules/movies/actions.js","resolved":"/Users/Other/Desktop/dev/vuex-apollo/tests/demo/app/modules/movies/types.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.actions = undefined;\n\nvar _templateObject = _taggedTemplateLiteral(['\\n            query UserInfo {\\n                User(id:21) {\\n                    id\\n                    firstName\\n                    lastName\\n                    email\\n                    avatar \\n                }\\n            }\\n            '], ['\\n            query UserInfo {\\n                User(id:21) {\\n                    id\\n                    firstName\\n                    lastName\\n                    email\\n                    avatar \\n                }\\n            }\\n            ']);\n\nvar _types = require('./types');\n\nvar types = _interopRequireWildcard(_types);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar actions = exports.actions = _defineProperty({}, types.GET_LATEST_LISTINGS, function (_ref) {\n    var commit = _ref.commit,\n        apollo = _ref.apollo,\n        gql = _ref.gql;\n\n    apollo.query({\n        query: gql(_templateObject)\n    }).then(function (response) {\n        console.log(response.data);\n    });\n});","map":{"mappings":[{"generated":{"line":10,"column":0},"source":"app/modules/movies/actions.js","original":{"line":1,"column":0}},{"name":"types","generated":{"line":12,"column":4},"source":"app/modules/movies/actions.js","original":{"line":1,"column":12}},{"generated":{"line":20,"column":0},"source":"app/modules/movies/actions.js","original":{"line":3,"column":7}},{"name":"actions","generated":{"line":20,"column":4},"source":"app/modules/movies/actions.js","original":{"line":3,"column":13}},{"name":"types","generated":{"line":20,"column":52},"source":"app/modules/movies/actions.js","original":{"line":4,"column":5}},{"name":"GET_LATEST_LISTINGS","generated":{"line":20,"column":58},"source":"app/modules/movies/actions.js","original":{"line":4,"column":11}},{"generated":{"line":20,"column":77},"source":"app/modules/movies/actions.js","original":{"line":3,"column":13}},{"generated":{"line":20,"column":95},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"generated":{"line":21,"column":0},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"name":"commit","generated":{"line":21,"column":8},"source":"app/modules/movies/actions.js","original":{"line":4,"column":35}},{"generated":{"line":21,"column":14},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"name":"commit","generated":{"line":21,"column":22},"source":"app/modules/movies/actions.js","original":{"line":4,"column":35}},{"generated":{"line":21,"column":28},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"generated":{"line":22,"column":0},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"name":"apollo","generated":{"line":22,"column":8},"source":"app/modules/movies/actions.js","original":{"line":4,"column":43}},{"generated":{"line":22,"column":14},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"name":"apollo","generated":{"line":22,"column":22},"source":"app/modules/movies/actions.js","original":{"line":4,"column":43}},{"generated":{"line":22,"column":28},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"generated":{"line":23,"column":0},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"name":"gql","generated":{"line":23,"column":8},"source":"app/modules/movies/actions.js","original":{"line":4,"column":51}},{"generated":{"line":23,"column":11},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"name":"gql","generated":{"line":23,"column":19},"source":"app/modules/movies/actions.js","original":{"line":4,"column":51}},{"generated":{"line":23,"column":22},"source":"app/modules/movies/actions.js","original":{"line":4,"column":58}},{"name":"apollo","generated":{"line":25,"column":0},"source":"app/modules/movies/actions.js","original":{"line":5,"column":8}},{"name":"query","generated":{"line":25,"column":11},"source":"app/modules/movies/actions.js","original":{"line":5,"column":15}},{"generated":{"line":25,"column":16},"source":"app/modules/movies/actions.js","original":{"line":5,"column":8}},{"generated":{"line":25,"column":17},"source":"app/modules/movies/actions.js","original":{"line":5,"column":21}},{"name":"query","generated":{"line":26,"column":0},"source":"app/modules/movies/actions.js","original":{"line":6,"column":12}},{"name":"gql","generated":{"line":26,"column":15},"source":"app/modules/movies/actions.js","original":{"line":6,"column":19}},{"generated":{"line":26,"column":18},"source":"app/modules/movies/actions.js","original":{"line":6,"column":12}},{"generated":{"line":27,"column":0},"source":"app/modules/movies/actions.js","original":{"line":5,"column":21}},{"generated":{"line":27,"column":5},"source":"app/modules/movies/actions.js","original":{"line":5,"column":8}},{"name":"then","generated":{"line":27,"column":7},"source":"app/modules/movies/actions.js","original":{"line":17,"column":11}},{"generated":{"line":27,"column":11},"source":"app/modules/movies/actions.js","original":{"line":5,"column":8}},{"generated":{"line":27,"column":12},"source":"app/modules/movies/actions.js","original":{"line":17,"column":16}},{"generated":{"line":27,"column":32},"source":"app/modules/movies/actions.js","original":{"line":17,"column":28}},{"name":"console","generated":{"line":28,"column":0},"source":"app/modules/movies/actions.js","original":{"line":18,"column":12}},{"name":"log","generated":{"line":28,"column":16},"source":"app/modules/movies/actions.js","original":{"line":18,"column":20}},{"generated":{"line":28,"column":19},"source":"app/modules/movies/actions.js","original":{"line":18,"column":12}},{"name":"response","generated":{"line":28,"column":20},"source":"app/modules/movies/actions.js","original":{"line":18,"column":24}},{"name":"data","generated":{"line":28,"column":29},"source":"app/modules/movies/actions.js","original":{"line":18,"column":33}},{"generated":{"line":28,"column":33},"source":"app/modules/movies/actions.js","original":{"line":18,"column":12}},{"generated":{"line":29,"column":0},"source":"app/modules/movies/actions.js","original":{"line":19,"column":9}},{"generated":{"line":29,"column":5},"source":"app/modules/movies/actions.js","original":{"line":5,"column":8}},{"generated":{"line":30,"column":0},"source":"app/modules/movies/actions.js","original":{"line":20,"column":5}},{"generated":{"line":30,"column":1},"source":"app/modules/movies/actions.js","original":{"line":3,"column":13}},{"generated":{"line":30,"column":2},"source":"app/modules/movies/actions.js","original":{"line":3,"column":7}}],"sources":{"app/modules/movies/actions.js":"import * as types from './types'\n\nexport const actions = {\n    [types.GET_LATEST_LISTINGS] ({ commit, apollo, gql }) {\n        apollo.query({\n            query: gql`\n            query UserInfo {\n                User(id:21) {\n                    id\n                    firstName\n                    lastName\n                    email\n                    avatar \n                }\n            }\n            `\n        }).then(response => {\n            console.log(response.data)\n        })\n    }\n}\n"},"lineCount":null}},"hash":"7f3c527c5409ac77e74632b740e5607a","cacheData":{"env":{}},"id":28}